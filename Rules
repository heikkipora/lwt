#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

route '/assets/**/*' do
  item.identifier.to_s.gsub('/assets', '')
end

compile '/assets/**/*' do
end

compile '/stylesheet.*' do
  filter :sass, syntax: :scss, style: :compact
  write '/css/lwt.css'
end

compile '/**/*.jpg', :rep => :thumbnail do
  filter :thumbnailize, :size => '240x240'
  write item.identifier.without_ext.gsub(/\/\d+-/, "/") + '-thumb.jpg'
end

compile '/**/*.pdf', :rep => :thumbnail do
  filter :thumbnailize, :size => '240x240'
  write item.identifier.without_ext.gsub(/\/\d+-/, "/") + '-thumb.jpg'
end

compile '/**/*.jpg' do
  filter :optimize, :size => '1600x1200'
end

compile '/1-ohjelma/*-kohteet/*/*.svg' do
  filter :svgoptimize
end

compile '/1-ohjelma/*-kohteet/*/*.svg', :rep => :thumbnail do
  filter :thumbnailize, :size => '1200:628'
  write item.identifier.without_ext.gsub(/\/\d+-/, "/") + '.jpg'
end

compile '/1-ohjelma/index.md' do
  filter :kramdown
  layout '/events.*'
  filter :relativize_paths, :type => :html
end

compile '/1-ohjelma/*-kohteet/index.md' do
  filter :kramdown
  layout '/houses.*'
  filter :relativize_paths, :type => :html
end

compile '/1-ohjelma/*-kohteet/**/*.md' do
  filter :kramdown
  layout '/house.*'
  filter :relativize_paths, :type => :html
end

compile '/1-ohjelma/*/*.md' do
  filter :kramdown
  layout '/event.*'
  filter :relativize_paths, :type => :html
end

compile '/1-programmet/index.md' do
  filter :kramdown
  layout '/events.*'
  filter :relativize_paths, :type => :html
end

compile '/1-programmet/*-kohteet/index.md' do
  filter :kramdown
  layout '/houses_se.*'
  filter :relativize_paths, :type => :html
end

compile '/1-programmet/*-kohteet/**/*.md' do
  filter :kramdown
  layout '/house_se.*'
  filter :relativize_paths, :type => :html
end

compile '/1-programmet/*/*.md' do
  filter :kramdown
  layout '/event.*'
  filter :relativize_paths, :type => :html
end

compile '/**/*' do
  if !item.binary?
    filter :kramdown
    layout '/default.*'
    filter :relativize_paths, :type => :html
  end
end

route '/**/*' do
  def html_extension(item)
    # Write item with identifier /1-foo/index.md to /foo/index.html
    item.identifier.without_ext.gsub(/\/\d+-/, "/") + ".html"
  end

  def route_html
    if item[:is_dir]
      "/dummy.html"
    elsif item.identifier.to_s == "/1-ohjelma/index.md"
      "/index.html"
    else
      html_extension(item)
    end
  end

  if item.binary?
    item.identifier.without_ext.gsub(/\/\d+-/, "/") + '.' + item[:extension]
  else
    route_html
  end
end

layout '/**/*', :erb
